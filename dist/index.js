'use strict';var T=require('express'),_=require('dotenv'),path=require('path'),zod=require('zod'),redis=require('redis'),R=require('axios');function _interopDefault(e){return e&&e.__esModule?e:{default:e}}function _interopNamespace(e){if(e&&e.__esModule)return e;var n=Object.create(null);if(e){Object.keys(e).forEach(function(k){if(k!=='default'){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:true,get:function(){return e[k]}});}})}n.default=e;return Object.freeze(n)}var T__default=/*#__PURE__*/_interopDefault(T);var ___namespace=/*#__PURE__*/_interopNamespace(_);var R__default=/*#__PURE__*/_interopDefault(R);var q=Object.defineProperty,j=Object.defineProperties;var N=Object.getOwnPropertyDescriptors;var x=Object.getOwnPropertySymbols;var k=Object.prototype.hasOwnProperty,G=Object.prototype.propertyIsEnumerable;var $=(h,e,t)=>e in h?q(h,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):h[e]=t,S=(h,e)=>{for(var t in e||(e={}))k.call(e,t)&&$(h,t,e[t]);if(x)for(var t of x(e))G.call(e,t)&&$(h,t,e[t]);return h},L=(h,e)=>j(h,N(e));var z=zod.z.object({latitude:zod.z.string().transform(Number).pipe(zod.z.number().min(-90).max(90)),longitude:zod.z.string().transform(Number).pipe(zod.z.number().min(-180).max(180)),radius:zod.z.string().transform(Number).pipe(zod.z.number().positive()),weatherCondition:zod.z.string().optional(),date:zod.z.string().regex(/^\d{4}-\d{2}-\d{2}$/).optional()}),A=class{constructor(e){this.locationService=e;}async search(e,t){try{let r=z.safeParse(e.query);if(!r.success)return t.status(400).json({errors:r.error.errors});let i=await this.locationService.findLocations(r.data);return t.json(i)}catch(r){return console.error("Error in location search:",r),t.status(500).json({error:"Internal server error"})}}};var g=class{constructor(){this.isConnected=!1;this.client=redis.createClient({password:process.env.REDIS_PASSWORD,socket:{host:process.env.REDIS_HOST,port:parseInt(process.env.REDIS_PORT||"14158")}}),this.client.on("error",e=>console.error("Redis Client Error",e)),this.client.on("connect",()=>console.log("Redis Client Connected")),this.client.on("ready",()=>{this.isConnected=!0,console.log("Redis Client Ready");}),this.client.on("end",()=>{this.isConnected=!1,console.log("Redis Client Connection Ended");}),this.connect();}async connect(){this.isConnected||await this.client.connect();}async get(e){try{let t=await this.client.get(e);return t?JSON.parse(t):void 0}catch(t){console.error("Redis Get Error:",t);return}}async set(e,t,r){try{let i=JSON.stringify(t);return r?await this.client.setEx(e,r,i):await this.client.set(e,i),!0}catch(i){return console.error("Redis Set Error:",i),!1}}async del(e){try{return await this.client.del(e)}catch(t){return console.error("Redis Del Error:",t),0}}async flush(){try{await this.client.flushAll();}catch(e){console.error("Redis Flush Error:",e);}}static generateKey(...e){return e.join(":")}async disconnect(){this.isConnected&&await this.client.quit();}};var C=class{constructor(e,t){this.locationRepository=e;this.weatherApi=t;this.cacheService=new g;}async findLocations(e){let t=g.generateKey("locations",e.latitude.toString(),e.longitude.toString(),e.radius.toString(),e.weatherCondition||"none",e.date||"current"),r=await this.cacheService.get(t);if(r)return console.log("Returning cached results"),r;console.log("Finding locations with params:",e);let i=await this.locationRepository.findWithinRadius(e.latitude,e.longitude,e.radius);if(console.log("Found initial locations:",i),e.weatherCondition){console.log("Filtering by weather condition:",e.weatherCondition);let l=await Promise.allSettled(i.map(async o=>{try{let a=await this.weatherApi.getWeather(o.latitude,o.longitude);return console.log(`Weather for ${o.city}:`,a),L(S({},o),{weather:a})}catch(a){return console.error(`Failed to fetch weather for ${o.city}:`,a),null}}));console.log("All weather results:",l);let s=e.weatherCondition.replace(/"/g,"").toLowerCase().trim(),c=l.filter(o=>o.status==="fulfilled").map(o=>o.value).filter(o=>{if(!o||!o.weather)return !1;let a=o.weather.condition.toLowerCase().trim();return console.log(`Comparing weather for ${o.city}:`,{requested:s,actual:a,matches:a.includes(s)}),a.includes(s)});return console.log("Filtered locations by weather:",c),this.cacheService.set(t,c,900),c}return i}};var P=class{constructor(e){this.weatherApi=e;}async findWithinRadius(e,t,r){console.log("Searching for cities within",r,"km of",e,t);let l=(await this.weatherApi.findNearbyCities(e,t,r)).filter(s=>s.distance<=r).sort((s,c)=>s.distance-c.distance);return console.log(`Found ${l.length} cities within ${r}km driving distance`),l}};var D=class{constructor(){if(this.weatherApiKey=process.env.WEATHER_API_KEY,this.googleMapsKey=process.env.GOOGLE_MAPS_API_KEY,!this.weatherApiKey)throw new Error("Weather API key is not configured");if(!this.googleMapsKey)throw new Error("Google Maps API key is not configured");this.cacheService=new g;}async findNearbyCities(e,t,r=100){var s,c;let i=g.generateKey("cities",e.toString(),t.toString(),r.toString()),l=await this.cacheService.get(i)||[];if(l.length>0)return console.log("Returning cached cities"),l;try{let o=[],a=this.calculateBBox(e,t,r),f=await R__default.default.get("https://nominatim.openstreetmap.org/search",{params:{format:"json","accept-language":"en",addressdetails:1,limit:50,q:"[place=city] OR [place=town]",viewbox:a,bounded:1},headers:{"User-Agent":"TravelTracer/1.0"}});if(console.log("Raw Nominatim response:",f.data),f.data&&Array.isArray(f.data)){let u=f.data.filter(n=>n.class==="place"&&["city","town","village"].includes(n.type)).map(n=>{let m=this.calculateDistance(e,t,parseFloat(n.lat),parseFloat(n.lon));return {city:n.name,state:n.address.state,country:n.address.country||"",latitude:parseFloat(n.lat),longitude:parseFloat(n.lon),distance:m,weather:void 0}}).filter(n=>n.distance<=r);o.push(...u);}let p=await R__default.default.get("https://nominatim.openstreetmap.org/search",{params:{format:"json","accept-language":"en",addressdetails:1,limit:50,q:"[place=village]",viewbox:a,bounded:1},headers:{"User-Agent":"TravelTracer/1.0"}});if(p.data&&Array.isArray(p.data)){let u=p.data.filter(n=>n.class==="place"&&n.type==="village").map(n=>{let m=this.calculateDistance(e,t,parseFloat(n.lat),parseFloat(n.lon));return {city:n.name,state:n.address.state,country:n.address.country||"",latitude:parseFloat(n.lat),longitude:parseFloat(n.lon),distance:m,weather:void 0}}).filter(n=>n.distance<=r);o.push(...u);}let d=await this.addDrivingDistances(e,t,o),v=this.removeDuplicates(d);return console.log(`Found ${v.length} unique cities within ${r}km radius`),this.cacheService.set(i,v,3600),v.sort((u,n)=>u.distance-n.distance)}catch(o){throw R__default.default.isAxiosError(o)&&console.error("Location Search Error:",{status:(s=o.response)==null?void 0:s.status,data:(c=o.response)==null?void 0:c.data,message:o.message}),new Error("Failed to fetch nearby cities")}}calculateBBox(e,t,r){let i=r/111.32,l=r/(111.32*Math.cos(e*Math.PI/180)),s=t-l,c=e-i,o=t+l,a=e+i;return `${s},${c},${o},${a}`}removeDuplicates(e){let t=new Map;return e.forEach(r=>{var s;let i=`${r.city.toLowerCase()}-${((s=r.state)==null?void 0:s.toLowerCase())||""}-${r.country.toLowerCase()}`,l=t.get(i);(!l||r.distance<l.distance)&&t.set(i,r);}),Array.from(t.values())}async getWeather(e,t,r){var s,c,o,a,f,p,d,v,u,n;let i=g.generateKey("weather",e.toString(),t.toString(),r||"current"),l=await this.cacheService.get(i);if(l)return console.log("Returning cached weather"),l;try{if(!r){let y=await R__default.default.get("http://api.weatherapi.com/v1/current.json",{params:{key:this.weatherApiKey,q:`${e},${t}`}});if(!((s=y.data)!=null&&s.current))throw new Error("Invalid response from Weather API");return {temperature:y.data.current.temp_c,condition:y.data.current.condition.text}}let m=new Date,O=new Date(r).getTime()-m.getTime(),W=Math.ceil(O/(1e3*60*60*24));if(W>14)throw new Error("Can only fetch weather up to 14 days in the future");if(W>0){let y=await R__default.default.get("http://api.weatherapi.com/v1/forecast.json",{params:{key:this.weatherApiKey,q:`${e},${t}`,days:W+1,dt:r}});if(!((a=(o=(c=y.data)==null?void 0:c.forecast)==null?void 0:o.forecastday)!=null&&a[0]))throw new Error("Invalid response from Weather API");let b=y.data.forecast.forecastday[0];return {temperature:b.day.avgtemp_c,condition:b.day.condition.text,date:b.date}}else {let y=await R__default.default.get("http://api.weatherapi.com/v1/history.json",{params:{key:this.weatherApiKey,q:`${e},${t}`,dt:r}});if(!((v=(d=(p=(f=y.data)==null?void 0:f.history)==null?void 0:p.forecast)==null?void 0:d.forecastday)!=null&&v[0]))throw new Error("Invalid response from Weather API");let b=y.data.history.forecast.forecastday[0];return {temperature:b.day.avgtemp_c,condition:b.day.condition.text,date:b.date}}}catch(m){throw R__default.default.isAxiosError(m)&&console.error("Weather API Error:",{status:(u=m.response)==null?void 0:u.status,data:(n=m.response)==null?void 0:n.data,message:m.message}),new Error("Failed to fetch weather data")}}calculateDistance(e,t,r,i){let s=(r-e)*(Math.PI/180),c=(i-t)*(Math.PI/180),o=Math.sin(s/2)*Math.sin(s/2)+Math.cos(e*(Math.PI/180))*Math.cos(r*(Math.PI/180))*Math.sin(c/2)*Math.sin(c/2),a=2*Math.atan2(Math.sqrt(o),Math.sqrt(1-o));return Math.round(6371*a)}async addDrivingDistances(e,t,r){let i=g.generateKey("distances",e.toString(),t.toString(),r.map(s=>`${s.latitude},${s.longitude}`).join(",")),l=await this.cacheService.get(i)||[];if(l.length>0)return console.log("Returning cached distances"),l;try{let c=[];for(let a=0;a<r.length;a+=25)c.push(r.slice(a,a+25));let o=[];for(let a of c){let f=a.map(d=>`${d.latitude},${d.longitude}`).join("|"),p=await R__default.default.get("https://maps.googleapis.com/maps/api/distancematrix/json",{params:{origins:`${e},${t}`,destinations:f,mode:"driving",key:this.googleMapsKey}});console.log("Google Distance Response:",p.data),p.data.status==="OK"&&a.forEach((d,v)=>{let u=p.data.rows[0].elements[v];u.status==="OK"?o.push(L(S({},d),{distance:Math.round(u.distance.value/1e3),straightLineDistance:this.calculateDistance(e,t,d.latitude,d.longitude)})):o.push(L(S({},d),{distance:this.calculateDistance(e,t,d.latitude,d.longitude)}));}),await new Promise(d=>setTimeout(d,1e3));}return this.cacheService.set(i,o,86400),o}catch(s){return console.error("Error calculating driving distances:",s),r.map(c=>L(S({},c),{distance:this.calculateDistance(e,t,c.latitude,c.longitude)}))}}};var I=T.Router(),M=new D,J=new P(M),U=new C(J,M),Y=new A(U);I.get("/search",(h,e)=>Y.search(h,e));var K=I;___namespace.config({path:path.resolve(__dirname,"../.env")});var E=T__default.default(),F=process.env.PORT||3e3;E.use(T__default.default.json());E.use("/api/locations",K);E.listen(F,()=>{console.log(`Server is running on port ${F}`);});
//# sourceMappingURL=index.js.map
//# sourceMappingURL=index.js.map