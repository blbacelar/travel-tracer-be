{"version":3,"sources":["../node_modules/module-alias/index.js","../node_modules/module-alias/register.js","../src/index.ts","../src/interfaces/controllers/LocationController.ts","../src/infrastructure/services/CacheService.ts","../src/application/services/LocationService.ts","../src/infrastructure/repositories/LocationRepository.ts","../src/infrastructure/api/openWeatherApi.ts","../src/application/routes/locationRoutes.ts"],"names":["require_module_alias","__commonJSMin","exports","module","BuiltinModule","Module","nodePath","modulePaths","moduleAliases","moduleAliasNames","oldNodeModulePaths","from","paths","oldResolveFilename","request","parentModule","isMain","options","i","alias","isPathMatchesAlias","aliasTarget","fromPath","path","addPathHelper","targetArray","removePathHelper","index","addPath","parent","mainModule","getMainModule","addAliases","aliases","addAlias","target","reset","__require","name","init","candidatePackagePaths","npmPackage","base","e","pathString","dir","modulePath","searchParamsSchema","z","LocationController","locationService","req","res","validation","locations","error","CacheService","createClient","err","key","value","ttl","stringValue","args","LocationService","locationRepository","weatherApi","params","cacheKey","cachedResults","locationsWithWeather","location","weather","__spreadProps","__spreadValues","requestedCondition","filteredLocations","result","actualCondition","LocationRepository","latitude","longitude","radius","filteredCities","city","a","b","OpenWeatherApi","lat","lon","_a","_b","cachedCities","allLocations","bbox","response","axios","place","distance","villageResponse","villageLocations","locationsWithDrivingDistance","uniqueLocations","latDelta","lonDelta","minLon","minLat","maxLon","maxLat","seen","existing","date","_c","_d","_e","_f","_g","_h","_i","_j","cachedWeather","today","diffTime","diffDays","forecast","history","lat1","lon1","lat2","lon2","dLat","dLon","c","originLat","originLon","l","cachedDistances","batches","batch","destinations","loc","element","resolve","router","Router","locationController","locationRoutes_default","X","app","express","PORT","server","shutdown"],"mappings":"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","file":"index.js","sourcesContent":["'use strict'\n\nvar BuiltinModule = require('module')\n\n// Guard against poorly mocked module constructors\nvar Module = module.constructor.length > 1\n  ? module.constructor\n  : BuiltinModule\n\nvar nodePath = require('path')\n\nvar modulePaths = []\nvar moduleAliases = {}\nvar moduleAliasNames = []\n\nvar oldNodeModulePaths = Module._nodeModulePaths\nModule._nodeModulePaths = function (from) {\n  var paths = oldNodeModulePaths.call(this, from)\n\n  // Only include the module path for top-level modules\n  // that were not installed:\n  if (from.indexOf('node_modules') === -1) {\n    paths = modulePaths.concat(paths)\n  }\n\n  return paths\n}\n\nvar oldResolveFilename = Module._resolveFilename\nModule._resolveFilename = function (request, parentModule, isMain, options) {\n  for (var i = moduleAliasNames.length; i-- > 0;) {\n    var alias = moduleAliasNames[i]\n    if (isPathMatchesAlias(request, alias)) {\n      var aliasTarget = moduleAliases[alias]\n      // Custom function handler\n      if (typeof moduleAliases[alias] === 'function') {\n        var fromPath = parentModule.filename\n        aliasTarget = moduleAliases[alias](fromPath, request, alias)\n        if (!aliasTarget || typeof aliasTarget !== 'string') {\n          throw new Error('[module-alias] Expecting custom handler function to return path.')\n        }\n      }\n      request = nodePath.join(aliasTarget, request.substr(alias.length))\n      // Only use the first match\n      break\n    }\n  }\n\n  return oldResolveFilename.call(this, request, parentModule, isMain, options)\n}\n\nfunction isPathMatchesAlias (path, alias) {\n  // Matching /^alias(\\/|$)/\n  if (path.indexOf(alias) === 0) {\n    if (path.length === alias.length) return true\n    if (path[alias.length] === '/') return true\n  }\n\n  return false\n}\n\nfunction addPathHelper (path, targetArray) {\n  path = nodePath.normalize(path)\n  if (targetArray && targetArray.indexOf(path) === -1) {\n    targetArray.unshift(path)\n  }\n}\n\nfunction removePathHelper (path, targetArray) {\n  if (targetArray) {\n    var index = targetArray.indexOf(path)\n    if (index !== -1) {\n      targetArray.splice(index, 1)\n    }\n  }\n}\n\nfunction addPath (path) {\n  var parent\n  path = nodePath.normalize(path)\n\n  if (modulePaths.indexOf(path) === -1) {\n    modulePaths.push(path)\n    // Enable the search path for the current top-level module\n    var mainModule = getMainModule()\n    if (mainModule) {\n      addPathHelper(path, mainModule.paths)\n    }\n    parent = module.parent\n\n    // Also modify the paths of the module that was used to load the\n    // app-module-paths module and all of it's parents\n    while (parent && parent !== mainModule) {\n      addPathHelper(path, parent.paths)\n      parent = parent.parent\n    }\n  }\n}\n\nfunction addAliases (aliases) {\n  for (var alias in aliases) {\n    addAlias(alias, aliases[alias])\n  }\n}\n\nfunction addAlias (alias, target) {\n  moduleAliases[alias] = target\n  // Cost of sorting is lower here than during resolution\n  moduleAliasNames = Object.keys(moduleAliases)\n  moduleAliasNames.sort()\n}\n\n/**\n * Reset any changes maded (resets all registered aliases\n * and custom module directories)\n * The function is undocumented and for testing purposes only\n */\nfunction reset () {\n  var mainModule = getMainModule()\n\n  // Reset all changes in paths caused by addPath function\n  modulePaths.forEach(function (path) {\n    if (mainModule) {\n      removePathHelper(path, mainModule.paths)\n    }\n\n    // Delete from require.cache if the module has been required before.\n    // This is required for node >= 11\n    Object.getOwnPropertyNames(require.cache).forEach(function (name) {\n      if (name.indexOf(path) !== -1) {\n        delete require.cache[name]\n      }\n    })\n\n    var parent = module.parent\n    while (parent && parent !== mainModule) {\n      removePathHelper(path, parent.paths)\n      parent = parent.parent\n    }\n  })\n\n  modulePaths = []\n  moduleAliases = {}\n  moduleAliasNames = []\n}\n\n/**\n * Import aliases from package.json\n * @param {object} options\n */\nfunction init (options) {\n  if (typeof options === 'string') {\n    options = { base: options }\n  }\n\n  options = options || {}\n\n  var candidatePackagePaths\n  if (options.base) {\n    candidatePackagePaths = [nodePath.resolve(options.base.replace(/\\/package\\.json$/, ''))]\n  } else {\n    // There is probably 99% chance that the project root directory in located\n    // above the node_modules directory,\n    // Or that package.json is in the node process' current working directory (when\n    // running a package manager script, e.g. `yarn start` / `npm run start`)\n    candidatePackagePaths = [nodePath.join(__dirname, '../..'), process.cwd()]\n  }\n\n  var npmPackage\n  var base\n  for (var i in candidatePackagePaths) {\n    try {\n      base = candidatePackagePaths[i]\n\n      npmPackage = require(nodePath.join(base, 'package.json'))\n      break\n    } catch (e) {\n      // noop\n    }\n  }\n\n  if (typeof npmPackage !== 'object') {\n    var pathString = candidatePackagePaths.join(',\\n')\n    throw new Error('Unable to find package.json in any of:\\n[' + pathString + ']')\n  }\n\n  //\n  // Import aliases\n  //\n\n  var aliases = npmPackage._moduleAliases || {}\n\n  for (var alias in aliases) {\n    if (aliases[alias][0] !== '/') {\n      aliases[alias] = nodePath.join(base, aliases[alias])\n    }\n  }\n\n  addAliases(aliases)\n\n  //\n  // Register custom module directories (like node_modules)\n  //\n\n  if (npmPackage._moduleDirectories instanceof Array) {\n    npmPackage._moduleDirectories.forEach(function (dir) {\n      if (dir === 'node_modules') return\n\n      var modulePath = nodePath.join(base, dir)\n      addPath(modulePath)\n    })\n  }\n}\n\nfunction getMainModule () {\n  return require.main._simulateRepl ? undefined : require.main\n}\n\nmodule.exports = init\nmodule.exports.addPath = addPath\nmodule.exports.addAlias = addAlias\nmodule.exports.addAliases = addAliases\nmodule.exports.isPathMatchesAlias = isPathMatchesAlias\nmodule.exports.reset = reset\n","require('.')()\n","import \"module-alias/register\";\nimport express from \"express\";\nimport * as dotenv from \"dotenv\";\nimport { resolve } from \"path\";\nimport locationRoutes from \"@/application/routes/locationRoutes\";\nimport { CacheService } from \"@/infrastructure/services/CacheService\";\n\n// Load environment variables from .env file\ndotenv.config({ path: resolve(__dirname, \"../.env\") });\n\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n\napp.use(express.json());\n\n// Routes\napp.use(\"/api/locations\", locationRoutes);\n\nconst server = app.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n  console.log(\n    `API URL: ${process.env.RAILWAY_STATIC_URL || \"http://localhost:\" + PORT}`\n  );\n  console.log(\"Environment variables loaded:\", {\n    WEATHER_API_KEY: process.env.WEATHER_API_KEY ? \"Set\" : \"Not set\",\n    PORT: process.env.PORT,\n  });\n});\n\n// Handle graceful shutdown\nprocess.on(\"SIGTERM\", shutdown);\nprocess.on(\"SIGINT\", shutdown);\n\nasync function shutdown() {\n  console.log(\"Received kill signal, shutting down gracefully\");\n\n  // Close the HTTP server\n  server.close(() => {\n    console.log(\"HTTP server closed\");\n  });\n\n  try {\n    // Disconnect Redis\n    const cacheService = new CacheService();\n    await cacheService.disconnect();\n    console.log(\"Redis connection closed\");\n\n    process.exit(0);\n  } catch (err) {\n    console.error(\"Error during shutdown:\", err);\n    process.exit(1);\n  }\n}\n","import { Request, Response } from \"express\";\nimport { LocationService } from \"../../application/services/LocationService\";\nimport { z } from \"zod\";\n\nconst searchParamsSchema = z.object({\n  latitude: z.string().transform(Number).pipe(z.number().min(-90).max(90)),\n  longitude: z.string().transform(Number).pipe(z.number().min(-180).max(180)),\n  radius: z.string().transform(Number).pipe(z.number().positive()),\n  weatherCondition: z.string().optional(),\n  date: z.string().regex(/^\\d{4}-\\d{2}-\\d{2}$/).optional(),\n});\n\nexport class LocationController {\n  constructor(private readonly locationService: LocationService) {}\n\n  async search(req: Request, res: Response) {\n    try {\n      const validation = searchParamsSchema.safeParse(req.query);\n\n      if (!validation.success) {\n        return res.status(400).json({ errors: validation.error.errors });\n      }\n\n      const locations = await this.locationService.findLocations(\n        validation.data\n      );\n      return res.json(locations);\n    } catch (error) {\n      console.error('Error in location search:', error);\n      return res.status(500).json({ error: \"Internal server error\" });\n    }\n  }\n}\n","import { createClient, RedisClientType } from 'redis';\n\nexport class CacheService {\n  private client: RedisClientType;\n  private isConnected: boolean = false;\n\n  constructor() {\n    this.client = createClient({\n      password: process.env.REDIS_PASSWORD,\n      socket: {\n        host: process.env.REDIS_HOST,\n        port: parseInt(process.env.REDIS_PORT || '14158')\n      }\n    });\n\n    this.client.on('error', (err) => console.error('Redis Client Error', err));\n    this.client.on('connect', () => console.log('Redis Client Connected'));\n    this.client.on('ready', () => {\n      this.isConnected = true;\n      console.log('Redis Client Ready');\n    });\n    this.client.on('end', () => {\n      this.isConnected = false;\n      console.log('Redis Client Connection Ended');\n    });\n\n    // Connect to Redis\n    this.connect();\n  }\n\n  private async connect() {\n    if (!this.isConnected) {\n      await this.client.connect();\n    }\n  }\n\n  async get<T>(key: string): Promise<T | undefined> {\n    try {\n      const value = await this.client.get(key);\n      return value ? JSON.parse(value) : undefined;\n    } catch (error) {\n      console.error('Redis Get Error:', error);\n      return undefined;\n    }\n  }\n\n  async set<T>(key: string, value: T, ttl?: number): Promise<boolean> {\n    try {\n      const stringValue = JSON.stringify(value);\n      if (ttl) {\n        await this.client.setEx(key, ttl, stringValue);\n      } else {\n        await this.client.set(key, stringValue);\n      }\n      return true;\n    } catch (error) {\n      console.error('Redis Set Error:', error);\n      return false;\n    }\n  }\n\n  async del(key: string): Promise<number> {\n    try {\n      return await this.client.del(key);\n    } catch (error) {\n      console.error('Redis Del Error:', error);\n      return 0;\n    }\n  }\n\n  async flush(): Promise<void> {\n    try {\n      await this.client.flushAll();\n    } catch (error) {\n      console.error('Redis Flush Error:', error);\n    }\n  }\n\n  // Generate consistent cache keys\n  static generateKey(...args: (string | number)[]): string {\n    return args.join(':');\n  }\n\n  async disconnect(): Promise<void> {\n    if (this.isConnected) {\n      await this.client.quit();\n    }\n  }\n} ","import { Location, LocationSearchParams } from \"@/domain/entities/Location\";\nimport { ILocationRepository } from \"@/domain/repositories/ILocationRepository\";\nimport { OpenWeatherApi } from \"@/infrastructure/api/openWeatherApi\";\nimport { CacheService } from '@/infrastructure/services/CacheService';\n\nexport class LocationService {\n  private readonly cacheService: CacheService;\n\n  constructor(\n    private readonly locationRepository: ILocationRepository,\n    private readonly weatherApi: OpenWeatherApi\n  ) {\n    this.cacheService = new CacheService();\n  }\n\n  async findLocations(params: LocationSearchParams): Promise<Location[]> {\n    const cacheKey = CacheService.generateKey(\n      'locations',\n      params.latitude.toString(),\n      params.longitude.toString(),\n      params.radius.toString(),\n      params.weatherCondition || 'none',\n      params.date || 'current'\n    );\n\n    const cachedResults = await this.cacheService.get<Location[]>(cacheKey);\n    if (cachedResults) {\n      console.log('Returning cached results');\n      return cachedResults;\n    }\n\n    console.log(\"Finding locations with params:\", params);\n\n    const locations = await this.locationRepository.findWithinRadius(\n      params.latitude,\n      params.longitude,\n      params.radius\n    );\n\n    console.log(\"Found initial locations:\", locations);\n\n    if (params.weatherCondition) {\n      console.log(\"Filtering by weather condition:\", params.weatherCondition);\n\n      type LocationWithWeather = Location & {\n        weather: NonNullable<Location[\"weather\"]>;\n      };\n\n      const locationsWithWeather = await Promise.allSettled(\n        locations.map(async (location: Location) => {\n          try {\n            const weather = await this.weatherApi.getWeather(\n              location.latitude,\n              location.longitude\n            );\n            console.log(`Weather for ${location.city}:`, weather);\n            return {\n              ...location,\n              weather,\n            } as LocationWithWeather;\n          } catch (error) {\n            console.error(\n              `Failed to fetch weather for ${location.city}:`,\n              error\n            );\n            return null;\n          }\n        })\n      );\n\n      console.log(\"All weather results:\", locationsWithWeather);\n\n      const requestedCondition = params.weatherCondition\n        .replace(/\"/g, '')\n        .toLowerCase()\n        .trim();\n\n      const filteredLocations = locationsWithWeather\n        .filter(\n          (result): result is PromiseFulfilledResult<LocationWithWeather | null> =>\n            result.status === \"fulfilled\"\n        )\n        .map((result) => result.value)\n        .filter((location): location is LocationWithWeather => {\n          if (!location || !location.weather) return false;\n          \n          const actualCondition = location.weather.condition.toLowerCase().trim();\n          \n          console.log(`Comparing weather for ${location.city}:`, {\n            requested: requestedCondition,\n            actual: actualCondition,\n            matches: actualCondition.includes(requestedCondition)\n          });\n\n          return actualCondition.includes(requestedCondition);\n        });\n\n      console.log(\"Filtered locations by weather:\", filteredLocations);\n\n      // Cache the final results\n      this.cacheService.set(cacheKey, filteredLocations, 900); // Cache for 15 minutes\n      return filteredLocations;\n    }\n\n    return locations;\n  }\n}\n","import { ILocationRepository } from '@/domain/repositories/ILocationRepository';\nimport { Location } from '@/domain/entities/Location';\nimport { OpenWeatherApi } from '../api/openWeatherApi';\n\nexport class LocationRepository implements ILocationRepository {\n  constructor(private readonly weatherApi: OpenWeatherApi) {}\n\n  async findWithinRadius(\n    latitude: number,\n    longitude: number,\n    radius: number\n  ): Promise<Location[]> {\n    console.log('Searching for cities within', radius, 'km of', latitude, longitude);\n    \n    // Get nearby cities from OpenWeather Geocoding API with driving distances\n    const cities = await this.weatherApi.findNearbyCities(latitude, longitude, radius);\n    \n    // Filter by radius and sort by driving distance\n    const filteredCities = cities\n      .filter(city => city.distance <= radius)\n      .sort((a, b) => a.distance - b.distance);\n\n    console.log(`Found ${filteredCities.length} cities within ${radius}km driving distance`);\n    return filteredCities;\n  }\n} ","import axios from \"axios\";\nimport { Location } from \"@/domain/entities/Location\";\nimport { CacheService } from \"../services/CacheService\";\n\ninterface NominatimResponse {\n  name: string;\n  lat: string;\n  lon: string;\n  address: {\n    city?: string;\n    town?: string;\n    village?: string;\n    state?: string;\n    country?: string;\n  };\n  type: string;\n  class: string;\n  display_name: string;\n}\n\ninterface WeatherApiResponse {\n  current?: {\n    temp_c: number;\n    condition: {\n      text: string;\n    };\n  };\n  forecast?: {\n    forecastday: Array<{\n      date: string;\n      day: {\n        avgtemp_c: number;\n        condition: {\n          text: string;\n        };\n      };\n    }>;\n  };\n  history?: {\n    forecast: {\n      forecastday: Array<{\n        date: string;\n        day: {\n          avgtemp_c: number;\n          condition: {\n            text: string;\n          };\n        };\n      }>;\n    };\n  };\n}\n\ninterface GoogleDistanceResponse {\n  rows: [\n    {\n      elements: [\n        {\n          distance: {\n            value: number; // distance in meters\n          };\n          status: string;\n        }\n      ];\n    }\n  ];\n  status: string;\n}\n\nexport class OpenWeatherApi {\n  private readonly weatherApiKey: string;\n  private readonly googleMapsKey: string;\n  private readonly cacheService: CacheService;\n\n  constructor() {\n    this.weatherApiKey = process.env.WEATHER_API_KEY!;\n    this.googleMapsKey = process.env.GOOGLE_MAPS_API_KEY!;\n    if (!this.weatherApiKey) {\n      throw new Error(\"Weather API key is not configured\");\n    }\n    if (!this.googleMapsKey) {\n      throw new Error(\"Google Maps API key is not configured\");\n    }\n\n    // Initialize cache with different TTLs\n    this.cacheService = new CacheService();\n  }\n\n  async findNearbyCities(\n    lat: number,\n    lon: number,\n    radius: number = 100\n  ): Promise<Location[]> {\n    const cacheKey = CacheService.generateKey(\n      \"cities\",\n      lat.toString(),\n      lon.toString(),\n      radius.toString()\n    );\n    const cachedCities = await this.cacheService.get<Location[]>(cacheKey) || [];\n\n    if (cachedCities.length > 0) {\n      console.log(\"Returning cached cities\");\n      return cachedCities;\n    }\n\n    try {\n      const allLocations: Location[] = [];\n\n      // Calculate bounding box for the search area\n      const bbox = this.calculateBBox(lat, lon, radius);\n\n      // Search for cities and towns in the area\n      const response = await axios.get<NominatimResponse[]>(\n        `https://nominatim.openstreetmap.org/search`,\n        {\n          params: {\n            format: \"json\",\n            \"accept-language\": \"en\",\n            addressdetails: 1,\n            limit: 50,\n            q: \"[place=city] OR [place=town]\",\n            viewbox: bbox,\n            bounded: 1,\n          },\n          headers: {\n            \"User-Agent\": \"TravelTracer/1.0\",\n          },\n        }\n      );\n\n      console.log(\"Raw Nominatim response:\", response.data);\n\n      if (response.data && Array.isArray(response.data)) {\n        const locations = response.data\n          .filter((place) => {\n            return (\n              place.class === \"place\" &&\n              [\"city\", \"town\", \"village\"].includes(place.type)\n            );\n          })\n          .map((place) => {\n            const distance = this.calculateDistance(\n              lat,\n              lon,\n              parseFloat(place.lat),\n              parseFloat(place.lon)\n            );\n            return {\n              city: place.name,\n              state: place.address.state,\n              country: place.address.country || \"\",\n              latitude: parseFloat(place.lat),\n              longitude: parseFloat(place.lon),\n              distance,\n              weather: undefined,\n            };\n          })\n          .filter((location) => location.distance <= radius);\n\n        allLocations.push(...locations);\n      }\n\n      // Try a second search specifically for villages\n      const villageResponse = await axios.get<NominatimResponse[]>(\n        `https://nominatim.openstreetmap.org/search`,\n        {\n          params: {\n            format: \"json\",\n            \"accept-language\": \"en\",\n            addressdetails: 1,\n            limit: 50,\n            q: \"[place=village]\",\n            viewbox: bbox,\n            bounded: 1,\n          },\n          headers: {\n            \"User-Agent\": \"TravelTracer/1.0\",\n          },\n        }\n      );\n\n      if (villageResponse.data && Array.isArray(villageResponse.data)) {\n        const villageLocations = villageResponse.data\n          .filter(\n            (place) => place.class === \"place\" && place.type === \"village\"\n          )\n          .map((place) => {\n            const distance = this.calculateDistance(\n              lat,\n              lon,\n              parseFloat(place.lat),\n              parseFloat(place.lon)\n            );\n            return {\n              city: place.name,\n              state: place.address.state,\n              country: place.address.country || \"\",\n              latitude: parseFloat(place.lat),\n              longitude: parseFloat(place.lon),\n              distance,\n              weather: undefined,\n            };\n          })\n          .filter((location) => location.distance <= radius);\n\n        allLocations.push(...villageLocations);\n      }\n\n      // After getting locations, calculate driving distances\n      const locationsWithDrivingDistance = await this.addDrivingDistances(\n        lat,\n        lon,\n        allLocations\n      );\n\n      // Remove duplicates and sort by distance\n      const uniqueLocations = this.removeDuplicates(\n        locationsWithDrivingDistance\n      );\n      console.log(\n        `Found ${uniqueLocations.length} unique cities within ${radius}km radius`\n      );\n\n      // Cache the results before returning\n      this.cacheService.set(cacheKey, uniqueLocations, 3600); // Cache for 1 hour\n      return uniqueLocations.sort((a, b) => a.distance - b.distance);\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        console.error(\"Location Search Error:\", {\n          status: error.response?.status,\n          data: error.response?.data,\n          message: error.message,\n        });\n      }\n      throw new Error(\"Failed to fetch nearby cities\");\n    }\n  }\n\n  private calculateBBox(lat: number, lon: number, radius: number): string {\n    // Convert radius from km to degrees (approximate)\n    const latDelta = radius / 111.32; // 1 degree of latitude is approximately 111.32 km\n    const lonDelta = radius / (111.32 * Math.cos((lat * Math.PI) / 180));\n\n    const minLon = lon - lonDelta;\n    const minLat = lat - latDelta;\n    const maxLon = lon + lonDelta;\n    const maxLat = lat + latDelta;\n\n    // Format: <min_lon>,<min_lat>,<max_lon>,<max_lat>\n    return `${minLon},${minLat},${maxLon},${maxLat}`;\n  }\n\n  private removeDuplicates(locations: Location[]): Location[] {\n    const seen = new Map<string, Location>();\n\n    locations.forEach((location) => {\n      const key = `${location.city.toLowerCase()}-${\n        location.state?.toLowerCase() || \"\"\n      }-${location.country.toLowerCase()}`;\n      const existing = seen.get(key);\n\n      if (!existing || location.distance < existing.distance) {\n        seen.set(key, location);\n      }\n    });\n\n    return Array.from(seen.values());\n  }\n\n  async getWeather(\n    lat: number,\n    lon: number,\n    date?: string\n  ): Promise<Location[\"weather\"]> {\n    const cacheKey = CacheService.generateKey(\n      \"weather\",\n      lat.toString(),\n      lon.toString(),\n      date || \"current\"\n    );\n    const cachedWeather = await this.cacheService.get<Location[\"weather\"]>(cacheKey);\n    if (cachedWeather) {\n      console.log(\"Returning cached weather\");\n      return cachedWeather;\n    }\n\n    try {\n      if (!date) {\n        // Get current weather\n        const response = await axios.get<WeatherApiResponse>(\n          `http://api.weatherapi.com/v1/current.json`,\n          {\n            params: {\n              key: this.weatherApiKey,\n              q: `${lat},${lon}`,\n            },\n          }\n        );\n\n        if (!response.data?.current) {\n          throw new Error(\"Invalid response from Weather API\");\n        }\n\n        return {\n          temperature: response.data.current.temp_c,\n          condition: response.data.current.condition.text,\n        };\n      }\n\n      const today = new Date();\n      const targetDate = new Date(date);\n      const diffTime = targetDate.getTime() - today.getTime();\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n      if (diffDays > 14) {\n        throw new Error(\"Can only fetch weather up to 14 days in the future\");\n      }\n\n      if (diffDays > 0) {\n        // Get future forecast\n        const response = await axios.get<WeatherApiResponse>(\n          `http://api.weatherapi.com/v1/forecast.json`,\n          {\n            params: {\n              key: this.weatherApiKey,\n              q: `${lat},${lon}`,\n              days: diffDays + 1,\n              dt: date,\n            },\n          }\n        );\n\n        if (!response.data?.forecast?.forecastday?.[0]) {\n          throw new Error(\"Invalid response from Weather API\");\n        }\n\n        const forecast = response.data.forecast.forecastday[0];\n        return {\n          temperature: forecast.day.avgtemp_c,\n          condition: forecast.day.condition.text,\n          date: forecast.date,\n        };\n      } else {\n        // Get historical weather\n        const response = await axios.get<WeatherApiResponse>(\n          `http://api.weatherapi.com/v1/history.json`,\n          {\n            params: {\n              key: this.weatherApiKey,\n              q: `${lat},${lon}`,\n              dt: date,\n            },\n          }\n        );\n\n        if (!response.data?.history?.forecast?.forecastday?.[0]) {\n          throw new Error(\"Invalid response from Weather API\");\n        }\n\n        const history = response.data.history.forecast.forecastday[0];\n        return {\n          temperature: history.day.avgtemp_c,\n          condition: history.day.condition.text,\n          date: history.date,\n        };\n      }\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        console.error(\"Weather API Error:\", {\n          status: error.response?.status,\n          data: error.response?.data,\n          message: error.message,\n        });\n      }\n      throw new Error(\"Failed to fetch weather data\");\n    }\n  }\n\n  private calculateDistance(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number\n  ): number {\n    const R = 6371; // Earth's radius in kilometers\n    const dLat = (lat2 - lat1) * (Math.PI / 180);\n    const dLon = (lon2 - lon1) * (Math.PI / 180);\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(lat1 * (Math.PI / 180)) *\n        Math.cos(lat2 * (Math.PI / 180)) *\n        Math.sin(dLon / 2) *\n        Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return Math.round(R * c);\n  }\n\n  private async addDrivingDistances(\n    originLat: number,\n    originLon: number,\n    locations: Location[]\n  ): Promise<Location[]> {\n    const cacheKey = CacheService.generateKey(\n      \"distances\",\n      originLat.toString(),\n      originLon.toString(),\n      locations.map((l) => `${l.latitude},${l.longitude}`).join(\",\")\n    );\n    const cachedDistances = await this.cacheService.get<Location[]>(cacheKey) || [];\n\n    if (cachedDistances.length > 0) {\n      console.log(\"Returning cached distances\");\n      return cachedDistances;\n    }\n\n    try {\n      // Google Maps API has a limit of 25 destinations per request\n      const batchSize = 25;\n      const batches = [];\n\n      for (let i = 0; i < locations.length; i += batchSize) {\n        batches.push(locations.slice(i, i + batchSize));\n      }\n\n      const locationsWithDrivingDistance: Location[] = [];\n\n      for (const batch of batches) {\n        const destinations = batch\n          .map((loc) => `${loc.latitude},${loc.longitude}`)\n          .join(\"|\");\n\n        const response = await axios.get<GoogleDistanceResponse>(\n          \"https://maps.googleapis.com/maps/api/distancematrix/json\",\n          {\n            params: {\n              origins: `${originLat},${originLon}`,\n              destinations: destinations,\n              mode: \"driving\",\n              key: this.googleMapsKey,\n            },\n          }\n        );\n\n        console.log(\"Google Distance Response:\", response.data);\n\n        if (response.data.status === \"OK\") {\n          batch.forEach((location, index) => {\n            const element = response.data.rows[0].elements[index];\n            if (element.status === \"OK\") {\n              locationsWithDrivingDistance.push({\n                ...location,\n                distance: Math.round(element.distance.value / 1000), // Convert meters to kilometers\n                straightLineDistance: this.calculateDistance(\n                  originLat,\n                  originLon,\n                  location.latitude,\n                  location.longitude\n                ),\n              });\n            } else {\n              // Fallback to straight-line distance if driving route not found\n              locationsWithDrivingDistance.push({\n                ...location,\n                distance: this.calculateDistance(\n                  originLat,\n                  originLon,\n                  location.latitude,\n                  location.longitude\n                ),\n              });\n            }\n          });\n        }\n\n        // Add delay to respect rate limits\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n      }\n\n      this.cacheService.set(cacheKey, locationsWithDrivingDistance, 86400); // Cache for 24 hours\n      return locationsWithDrivingDistance;\n    } catch (error) {\n      console.error(\"Error calculating driving distances:\", error);\n      // Fallback to straight-line distances if Google Maps API fails\n      return locations.map((location) => ({\n        ...location,\n        distance: this.calculateDistance(\n          originLat,\n          originLon,\n          location.latitude,\n          location.longitude\n        ),\n      }));\n    }\n  }\n}\n","import { Router } from \"express\";\nimport { LocationController } from \"@/interfaces/controllers/LocationController\";\nimport { LocationService } from \"@/application/services/LocationService\";\nimport { LocationRepository } from \"@/infrastructure/repositories/LocationRepository\";\nimport { OpenWeatherApi } from \"@/infrastructure/api/openWeatherApi\";\n\nconst router = Router();\n\nconst weatherApi = new OpenWeatherApi();\nconst locationRepository = new LocationRepository(weatherApi);\nconst locationService = new LocationService(locationRepository, weatherApi);\nconst locationController = new LocationController(locationService);\n\nrouter.get(\"/search\", (req, res) => locationController.search(req, res));\n\nexport default router;\n"]}